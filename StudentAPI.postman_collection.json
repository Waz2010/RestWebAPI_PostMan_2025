{
	"info": {
		"_postman_id": "5a3ca47b-6d4a-457d-bb70-dfb09ca7c0e6",
		"name": "StudentAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42537187"
	},
	"item": [
		{
			"name": "Create Student (POST)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"✅ Status Code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"console.log(\"📌 POST Response Data:\", responseData);\r",
							"\r",
							"if (responseData.id) {\r",
							"    pm.environment.set(\"student_id\", responseData.id);\r",
							"    pm.environment.set(\"student_name\", responseData.studentName);\r",
							"    pm.environment.set(\"student_gender\", responseData.studentGender);\r",
							"    pm.environment.set(\"student_age\", responseData.age);\r",
							"    pm.environment.set(\"student_standard\", responseData.standard);\r",
							"    pm.environment.set(\"father_name\", responseData.fatherName);\r",
							"    console.log(\"✅ Saved all student details:\", responseData);\r",
							"} else {\r",
							"    pm.test(\"❌ Failed to retrieve student ID!\", function () {\r",
							"        pm.expect(responseData.id).to.exist;\r",
							"    });\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.unset(\"student_id\"); // Remove old student_id before the request\r",
							"console.log(\"✅ Cleared old student_id\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"studentName\": \"John Doe\",\r\n  \"studentGender\": \"Male\",\r\n  \"age\": 20,\r\n  \"standard\": 3,\r\n  \"fatherName\": \"Robert Doe\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://testrestapi.setrents.com/api/StudentAPI",
					"protocol": "https",
					"host": [
						"testrestapi",
						"setrents",
						"com"
					],
					"path": [
						"api",
						"StudentAPI"
					]
				}
			},
			"response": []
		},
		{
			"name": "Student By ID (GET)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"✅ Status Code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"console.log(\"📌 GET Response Data:\", responseData);\r",
							"\r",
							"pm.test(\"✅ Validate Student Data Matches\", function () {\r",
							"    pm.expect(responseData).to.be.an(\"object\");\r",
							"    pm.expect(responseData).to.have.property(\"id\", parseInt(pm.environment.get(\"student_id\")));\r",
							"    pm.expect(responseData).to.have.property(\"studentName\", pm.environment.get(\"student_name\"));\r",
							"    pm.expect(responseData).to.have.property(\"studentGender\", pm.environment.get(\"student_gender\"));\r",
							"    pm.expect(responseData).to.have.property(\"age\", parseInt(pm.environment.get(\"student_age\")));\r",
							"    pm.expect(responseData).to.have.property(\"standard\", parseInt(pm.environment.get(\"student_standard\")));\r",
							"    pm.expect(responseData).to.have.property(\"fatherName\", pm.environment.get(\"father_name\"));\r",
							"\r",
							"    // Success message when all tests pass\r",
							"    console.log(`🎉 SUCCESS: Student record validated successfully! \r",
							"        ID: ${responseData.id}, \r",
							"        Name: ${responseData.studentName}, \r",
							"        Gender: ${responseData.studentGender}, \r",
							"        Age: ${responseData.age}, \r",
							"        Standard: ${responseData.standard}, \r",
							"        Father's Name: ${responseData.fatherName}`);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://testrestapi.setrents.com/api/StudentAPI/{{student_id}}",
					"protocol": "https",
					"host": [
						"testrestapi",
						"setrents",
						"com"
					],
					"path": [
						"api",
						"StudentAPI",
						"{{student_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Student By ID (UPDATE)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"✅ Status Code is 200 or 204\", function () {\r",
							"    pm.response.to.have.status.oneOf([200, 204]);\r",
							"});\r",
							"\r",
							"// Parse response\r",
							"let responseData = pm.response.json();\r",
							"console.log(\"📌 PUT Response Data:\", responseData);\r",
							"\r",
							"// Check if response contains student data\r",
							"if (responseData.student) {\r",
							"    let updatedStudent = responseData.student;\r",
							"\r",
							"    // Save updated student details to environment variables\r",
							"    pm.environment.set(\"student_id\", updatedStudent.id);\r",
							"    pm.environment.set(\"student_name\", updatedStudent.studentName);\r",
							"    pm.environment.set(\"student_gender\", updatedStudent.studentGender);\r",
							"    pm.environment.set(\"student_age\", updatedStudent.age);\r",
							"    pm.environment.set(\"student_standard\", updatedStudent.standard);\r",
							"    pm.environment.set(\"father_name\", updatedStudent.fatherName);\r",
							"\r",
							"    console.log(`🎉 SUCCESS: Student updated successfully!\r",
							"        ID: ${updatedStudent.id}, \r",
							"        Name: ${updatedStudent.studentName}, \r",
							"        Gender: ${updatedStudent.studentGender}, \r",
							"        Age: ${updatedStudent.age}, \r",
							"        Standard: ${updatedStudent.standard}, \r",
							"        Father's Name: ${updatedStudent.fatherName}`);\r",
							"} else {\r",
							"    console.log(\"❌ Update failed! No student data found in response.\");\r",
							"    pm.test(\"❌ Response should contain student object\", function () {\r",
							"        pm.expect(responseData.student).to.exist;\r",
							"    });\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": {{student_id}},\r\n    \"studentName\": \"John Updated\",\r\n    \"studentGender\": \"Male\",\r\n    \"age\": 21,\r\n    \"standard\": 4,\r\n    \"fatherName\": \"Robert Updated\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://testrestapi.setrents.com/api/StudentAPI/{{student_id}}",
					"protocol": "https",
					"host": [
						"testrestapi",
						"setrents",
						"com"
					],
					"path": [
						"api",
						"StudentAPI",
						"{{student_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Student By ID (DELETE)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"✅ Status Code is 200 or 204\", function () {\r",
							"    pm.response.to.have.status.oneOf([200, 204]);\r",
							"});\r",
							"\r",
							"// Parse response\r",
							"let responseData = pm.response.json();\r",
							"console.log(\"📌 DELETE Response Data:\", responseData);\r",
							"\r",
							"// Ensure the response contains valid student data\r",
							"if (pm.response.code === 200 || pm.response.code === 204) {\r",
							"    pm.test(\"✅ Validate Deleted Student Data\", function () {\r",
							"        pm.expect(responseData).to.be.an(\"object\");\r",
							"        pm.expect(responseData).to.have.property(\"id\", parseInt(pm.environment.get(\"student_id\")));\r",
							"        pm.expect(responseData).to.have.property(\"studentName\", pm.environment.get(\"student_name\"));\r",
							"        pm.expect(responseData).to.have.property(\"studentGender\", pm.environment.get(\"student_gender\"));\r",
							"        pm.expect(responseData).to.have.property(\"age\", parseInt(pm.environment.get(\"student_age\")));\r",
							"        pm.expect(responseData).to.have.property(\"standard\", parseInt(pm.environment.get(\"student_standard\")));\r",
							"        pm.expect(responseData).to.have.property(\"fatherName\", pm.environment.get(\"father_name\"));\r",
							"    });\r",
							"\r",
							"    // ✅ Log success message only if deletion is successful\r",
							"    console.log(`🎉 SUCCESS: Student deleted! \r",
							"        ID: ${responseData.id}, \r",
							"        Name: ${responseData.studentName}, \r",
							"        Gender: ${responseData.studentGender}, \r",
							"        Age: ${responseData.age}, \r",
							"        Standard: ${responseData.standard}, \r",
							"        Father's Name: ${responseData.fatherName}`);\r",
							"\r",
							"    // ✅ Clear environment variables after successful deletion\r",
							"    pm.environment.unset(\"student_id\");\r",
							"    pm.environment.unset(\"student_name\");\r",
							"    pm.environment.unset(\"student_gender\");\r",
							"    pm.environment.unset(\"student_age\");\r",
							"    pm.environment.unset(\"student_standard\");\r",
							"    pm.environment.unset(\"father_name\");\r",
							"\r",
							"    console.log(\"✅ Cleared deleted student environment variables.\");\r",
							"} else {\r",
							"    console.log(\"❌ Deletion failed or student not found.\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{student_id}},\r\n  \"studentName\": \"John Updated\",\r\n  \"studentGender\": \"Male\",\r\n  \"age\": 22,\r\n  \"standard\": 4,\r\n  \"fatherName\": \"Robert Updated\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://testrestapi.setrents.com/api/StudentAPI/{{student_id}}",
					"protocol": "https",
					"host": [
						"testrestapi",
						"setrents",
						"com"
					],
					"path": [
						"api",
						"StudentAPI",
						"{{student_id}}"
					]
				}
			},
			"response": []
		}
	]
}
